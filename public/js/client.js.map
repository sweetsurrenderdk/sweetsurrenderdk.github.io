{"version":3,"names":[],"mappings":"","sources":["client.js"],"sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function e(t, n, r) {\n    function s(o, u) {\n        if (!n[o]) {\n            if (!t[o]) {\n                var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\n            }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n                var n = t[o][1][e];return s(n ? n : e);\n            }, l, l.exports, e, t, n, r);\n        }return n[o].exports;\n    }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {\n        s(r[o]);\n    }return s;\n})({ 1: [function (require, module, exports) {\n        require('./helpers/DebugHelper');\n        require('./helpers/FacebookHelper');\n\n        // Globals\n        window.toggleWidget = function toggleWidget(name) {\n            if (document.body.dataset.activeWidget == name) {\n                closeWidgets();\n            } else {\n                document.body.dataset.activeWidget = name;\n            }\n        };\n\n        window.closeWidgets = function closeWidgets() {\n            console.log('ddue');\n            document.body.dataset.activeWidget = '';\n        };\n\n        // Init\n        FacebookHelper.populateCalendar();\n    }, { \"./helpers/DebugHelper\": 2, \"./helpers/FacebookHelper\": 3 }], 2: [function (require, module, exports) {\n        'use strict';\n\n        var lastSenderName = '';\n\n        var DebugHelper = function () {\n            function DebugHelper() {\n                _classCallCheck(this, DebugHelper);\n            }\n\n            _createClass(DebugHelper, null, [{\n                key: \"log\",\n\n                /**\n                 * Logs a message\n                 *\n                 * @param {String} message\n                 * @param {Object} sender\n                 * @param {Number} verbosity\n                 */\n                value: function log(message, sender, verbosity) {\n                    if (verbosity == 0) {\n                        this.error('Verbosity cannot be set to 0', this);\n                    } else if (!verbosity) {\n                        verbosity = 1;\n                    }\n\n                    if (this.verbosity >= verbosity) {\n                        console.log(this.parseSender(sender), this.getDateString(), message);\n                    }\n                }\n\n                /**\n                 * Gets the date string\n                 *\n                 * @returns {String} date\n                 */\n\n            }, {\n                key: \"getDateString\",\n                value: function getDateString() {\n                    var date = new Date();\n\n                    var output = '(' + date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate() + '-' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds() + ')';\n\n                    return output;\n                }\n\n                /**\n                 * Parse sender\n                 *\n                 * @param {Object} sender\n                 *\n                 * @returns {String} name\n                 */\n\n            }, {\n                key: \"parseSender\",\n                value: function parseSender(sender) {\n                    var senderName = '';\n\n                    if (sender) {\n                        if (typeof sender === 'function') {\n                            senderName += sender.name;\n                        } else if (sender.constructor) {\n                            senderName += sender.constructor.name;\n                        } else {\n                            senderName += sender.toString();\n                        }\n\n                        senderName;\n                    }\n\n                    if (senderName == lastSenderName) {\n                        senderName = '';\n                    } else {\n                        lastSenderName = senderName;\n                        senderName = '\\n' + senderName + '\\n----------\\n';\n                    }\n\n                    return senderName;\n                }\n\n                /**\n                 * Throws an error\n                 *\n                 * @param {String} message\n                 * @param {Object} sender\n                 */\n\n            }, {\n                key: \"error\",\n                value: function error(message, sender) {\n                    throw new Error(this.parseSender(sender) + ' ' + this.getDateString() + ' ' + message);\n                }\n\n                /**\n                 * Shows a warning\n                 */\n\n            }, {\n                key: \"warning\",\n                value: function warning(message, sender) {\n                    console.log(this.parseSender(sender), this.getDateString(), message);\n                    console.trace();\n                }\n            }]);\n\n            return DebugHelper;\n        }();\n\n        window.debug = DebugHelper;\n    }, {}], 3: [function (require, module, exports) {\n        'use strict';\n\n        var token = '927807870680835|0b5445c0ab8a3689ed727ab5bed0da1c';\n\n        var FacebookHelper = function () {\n            function FacebookHelper() {\n                _classCallCheck(this, FacebookHelper);\n            }\n\n            _createClass(FacebookHelper, null, [{\n                key: \"apiCall\",\n                value: function apiCall(url, query) {\n                    var _this = this;\n\n                    return new Promise(function (resolve, reject) {\n                        var xhr = new XMLHttpRequest();\n                        xhr.open('GET', 'https://graph.facebook.com/sweetsurrenderdk/' + url + '?access_token=' + token + query);\n                        xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');\n\n                        xhr.send();\n\n                        xhr.onreadystatechange = function () {\n                            var DONE = 4;\n                            var OK = 200;\n                            var NOT_MODIFIED = 304;\n\n                            if (xhr.readyState === DONE) {\n                                if (xhr.status == OK || xhr.status == NOT_MODIFIED) {\n                                    var response = xhr.responseText;\n\n                                    if (response && response != 'OK') {\n                                        try {\n                                            response = JSON.parse(response);\n                                        } catch (e) {\n                                            debug.log('Response: ' + response, _this);\n                                            debug.warning(e, _this);\n                                        }\n                                    }\n\n                                    resolve(response);\n                                } else {\n                                    reject(new Error(xhr.responseText));\n                                }\n                            }\n                        };\n                    });\n                }\n            }, {\n                key: \"populateCalendar\",\n                value: function populateCalendar() {\n                    var eventsElement = document.querySelector('.calendar-container .calendar-events');\n                    var eventElementTemplate = eventsElement.querySelector('.calendar-event');\n\n                    var autoLinker = new Autolinker();\n\n                    FacebookHelper.apiCall('events', '&fields=cover,name,start_time,end_time,description').then(function (response) {\n                        document.querySelector('.icon-calendar-new-events').innerHTML = response.data.length;\n\n                        for (var i = 0; i < response.data.length; i++) {\n                            var evt = response.data[i];\n                            var eventElement = eventElementTemplate.cloneNode(true);\n                            var description = evt.description;\n\n                            var start = new Date(evt.start_time);\n                            var end = new Date(evt.end_time);\n\n                            eventElement.dataset.id = evt.id;\n\n                            if (evt.cover) {\n                                eventElement.querySelector('.cover').style.backgroundImage = 'url(\\'' + evt.cover.source + '\\')';\n                            }\n\n                            description = autoLinker.link(description);\n\n                            eventElement.querySelector('.name').innerHTML = evt.name;\n                            eventElement.querySelector('.date').innerHTML = start.getDate() + '/' + (start.getMonth() + 1) + '/' + start.getFullYear();\n                            eventElement.querySelector('.description').innerHTML = description;\n\n                            var hours = eventElement.querySelector('.hours');\n\n                            hours.innerHTML = '';\n\n                            if (!isNaN(start.getHours())) {\n                                if (start.getHours().toString().length != 2) {\n                                    hours.innerHTML += '0' + start.getHours();\n                                } else {\n                                    hours.innerHTML += start.getHours();\n                                }\n\n                                if (start.getMinutes().toString().length != 2) {\n                                    hours.innerHTML += ':0' + start.getMinutes();\n                                } else {\n                                    hours.innerHTML += ':' + start.getMinutes();\n                                }\n\n                                if (!isNaN(end.getHours())) {\n                                    if (end.getHours().toString().length != 2) {\n                                        hours.innerHTML += ' - 0' + end.getHours();\n                                    } else {\n                                        hours.innerHTML += ' - ' + end.getHours();\n                                    }\n\n                                    if (end.getMinutes().toString().length != 2) {\n                                        hours.innerHTML += ':0' + end.getMinutes();\n                                    } else {\n                                        hours.innerHTML += ':' + end.getMinutes();\n                                    }\n                                }\n                            }\n\n                            var link = eventElement.querySelector('.fb-link');\n\n                            link.setAttribute('href', link.getAttribute('href') + evt.id);\n\n                            eventsElement.appendChild(eventElement);\n                        }\n\n                        eventElementTemplate.parentElement.removeChild(eventElementTemplate);\n                    }).catch(function (e) {\n                        console.log(e);\n                    });\n                }\n            }]);\n\n            return FacebookHelper;\n        }();\n\n        window.FacebookHelper = FacebookHelper;\n    }, {}] }, {}, [1]);"],"file":"client.js","sourceRoot":"/source/"}